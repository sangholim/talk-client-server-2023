# compose 파일 버전
version: "3"
services:
  # 서비스 명
  authorization-service:
    # 사용할 이미지
    image: hybriddevslim/authorization-server-2023:latest
    # 컨테이너 실행 시 재시작
    restart: always
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    expose:
      - "9090"
    environment:
      SERVER_FORWARD_HEADERS_STRATEGY: NATIVE
      SERVER_SERVLET_CONTEXT_PATH: /authorization-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/authorization
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: redis
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECTURI: http://resource-service:5002/authorization-service/login/oauth2/code/kakao
      AUTHORIZATION.ISSUER: http://resource-service:5002/authorization-service
    # 볼륨 설정
    volumes:
      - ./data/authorization/:/data
  # 서비스 명
  member-service:
    # 사용할 이미지
    image: hybriddevslim/member-service-2023:latest
    restart: always
    expose:
      - "8080"
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://root:password@postgresql:5432/member_service
      SPRING_FLYWAY_URL: jdbc:postgresql://postgresql:5432/member_service
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_INTROSPECTION-URI: http://auth-server:9090/oauth2/v1/introspect
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_CLIENT_ID: internal-client
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_CLIENT_SECRET: internal-client-secret
    # 볼륨 설정
    volumes:
      - ./data/member_service/:/data
  # 서비스 명
  postgresql:
    # 사용할 이미지
    image: postgres:latest
    # 컨테이너 실행 시 재시작
    restart: always
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - "5432:5432"
    # 환경 변수 설정
    environment:
      # PostgreSQL 계정 및 패스워드 설정 옵션
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    # 볼륨 설정
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
      - ./docker-compose/postgresql/:/docker-entrypoint-initdb.d
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/:/data
      - ./conf/redis.conf:/usr/local/conf/redis.conf
    command: redis-server /usr/local/conf/redis.conf
  nginx:
    image: "nginx"
    restart: always
    ports:
      - "5002:80"
    volumes:
      - ./docker-compose/nginx/nginx.conf:/etc/nginx/nginx.conf